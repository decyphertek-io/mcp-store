{
  "id": "web-search",
  "name": "Web Search & Scraper",
  "version": "1.0.0",
  "description": "DuckDuckGo web search and URL content scraping for AI context enhancement",
  "author": "DecypherTek",
  "github_url": "https://github.com/decyphertek/mcp-store/blob/main/servers/web-search",
  "python_file": "web.mcp",
  "mobile_compatible": true,
  "category": "search",
  "tags": ["search", "web", "scraping", "duckduckgo", "research"],
  
  "configuration": {
    "search_engine": {
      "type": "string",
      "description": "Search engine to use",
      "enum": ["duckduckgo"],
      "default": "duckduckgo",
      "required": false
    },
    "max_results": {
      "type": "integer",
      "description": "Maximum number of search results to return",
      "minimum": 1,
      "maximum": 50,
      "default": 10,
      "required": false
    }
  },
  
  "requirements": [
    "duckduckgo-search>=4.0.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0"
  ],
  
  "tools": [
    {
      "name": "search",
      "description": "Search the web using DuckDuckGo",
      "parameters": {
        "query": {
          "type": "string",
          "description": "Search query string",
          "required": true,
          "example": "Python async programming tutorial"
        },
        "num_results": {
          "type": "integer",
          "description": "Number of results to return (overrides max_results config)",
          "required": false,
          "minimum": 1,
          "maximum": 50,
          "default": null
        }
      },
      "returns": {
        "type": "array",
        "description": "List of search result objects",
        "items": {
          "title": "string (page title)",
          "url": "string (page URL)",
          "snippet": "string (brief description)"
        }
      },
      "example_usage": {
        "query": "latest Python best practices",
        "num_results": 5
      },
      "performance": {
        "typical_duration_ms": "2000-5000",
        "network_required": true,
        "battery_impact": "low"
      }
    },
    {
      "name": "scrape_url",
      "description": "Extract full text content from a URL",
      "parameters": {
        "url": {
          "type": "string",
          "description": "URL to scrape",
          "required": true,
          "format": "uri",
          "example": "https://realpython.com/python-async-features"
        }
      },
      "returns": {
        "type": "object",
        "description": "Scraped content object",
        "properties": {
          "url": "string (the URL that was scraped)",
          "title": "string (page title)",
          "content": "string (text content, max 5000 chars)",
          "error": "string (error message if failed, optional)"
        }
      },
      "example_usage": {
        "url": "https://example.com/article"
      },
      "performance": {
        "typical_duration_ms": "3000-10000",
        "network_required": true,
        "battery_impact": "medium",
        "data_usage": "medium (full page download)"
      }
    }
  ],
  
  "ai_instructions": {
    "file": "web.md",
    "summary": "Use for web searches and content extraction. Call search() for queries, scrape_url() for specific pages. Always cite sources and handle errors gracefully."
  },
  
  "permissions": {
    "internet": true,
    "network_state": true,
    "storage": false,
    "camera": false,
    "location": false
  },
  
  "compatibility": {
    "android": {
      "min_sdk": 24,
      "chaquopy_compatible": true
    },
    "ios": {
      "supported": false,
      "reason": "Not yet tested on iOS"
    }
  },
  
  "limitations": [
    "DuckDuckGo rate limiting may apply (no official limit, but be reasonable)",
    "Scraping limited to 5000 characters per page",
    "10 second timeout for scraping requests",
    "No JavaScript execution (static HTML only)",
    "May not work with all websites (anti-scraping measures)"
  ],
  
  "best_practices": [
    "Cache search results in ChromaDB RAG to avoid repeated searches",
    "Use specific, targeted search queries",
    "Combine search with scraping for comprehensive information",
    "Handle network errors gracefully (mobile connectivity varies)",
    "Inform user when fetching data ('Searching...')",
    "Always cite sources with URLs in responses"
  ],
  
  "changelog": [
    {
      "version": "1.0.0",
      "date": "2024-10-03",
      "changes": [
        "Initial release",
        "DuckDuckGo search integration",
        "BeautifulSoup web scraping",
        "Mobile-optimized for Chaquopy"
      ]
    }
  ]
}

